#!/bin/bash
DIR=$(cd $(dirname "$0"); pwd)
cd $DIR
echo -----------------------------------------------------
echo      DooMLoRD kernel.sin and FTF creator v1.0
echo      modified by Championswimmer 
echo      works with Wine and java 1.6 on Ubuntu

echo -----------------------------------------------------
echo                FOR XPERIA X10 ONLY
echo -----------------------------------------------------
echo   Credits: 
echo      the_laser - sin packer tools
echo      Androxyde - FTF packer tools
echo      DooMLoRD  - making this easy for all 
echo      championswimmer  - bringing it to linux 
echo -----------------------------------------------------
echo  THIS WONT RUN WIHOUT WINE AND JAVA 1.6

echo   before you begin make sure that:
echo
echo      kernel zImage is called "image" 
echo      ramdisk.cpio.gz is called "ramdisk"
echo      and both the files are present in input folder
echo
echo                 or 
echo
echo      you have specified paths while calling this program
echo -----------------------------------------------------
read -p "Press [Enter] key to create ftf..."

if [ ! $1 -o ! $2 ]
then
	if [ -e  ../../input/image -a -e ../../input/ramdisk ]
	then
		cp ../../input/image ./image
		cp ../../input/ramdisk ./ramdisk
	else
		echo "-------------ERROR-----------------"
		echo "image and ramdisk not found in input folder"
		exit
	fi
	
else
	cp $1 ./image
	cp $2 ./ramdisk
fi
wine bin2Elf.exe 2 0x20008000 image 0x20008000 0x0 ramdisk 0x24000000 0x80000000
wine bin2sin.exe result.elf 03000000220000007502000062000000
rm result.elf
mv result.elf.sin kernel.sin
echo Manifest-Version: 1.0 > manifest.mf

echo
echo "----------------ENTER KERNEL BRANDING DETAILS------------"
echo "Enter device name [eg. x10] :"
read FTF_DEV
echo "Enter kernel name or branding [eg. custom-kernel] :"
read FTF_BRAND
echo "Enter developer's name [eg. xda-developer] :"
read FTF_AUTH
echo "Enter kernel version [eg. v0.0.0] :"
read FTF_VER
echo device: $FTF_DEV >>  manifest.mf
echo branding: $FTF_BRAND >>  manifest.mf
echo Created-By: $FTF_AUTH >>  manifest.mf
echo version: $FTF_VER >>  manifest.mf
jar cvfm0 kernel.jar manifest.mf loader.sin kernel.sin
mv kernel.jar $FTF_BRAND-$FTF_VER.ftf
mv $FTF_BRAND-$FTF_VER.ftf ../../output/
rm manifest.mf 
rm image
rm ramdisk
rm kernel.sin

